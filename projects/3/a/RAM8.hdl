// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/3/a/RAM8.hdl
/**
 * Memory of eight 16-bit registers.
 * If load is asserted, the value of the register selected by
 * address is set to in; Otherwise, the value does not change.
 * The value of the selected register is emitted by out.
 * So given k ==> address, that register located at that position has to be used
 * I am using a paper to think in the different parts
 */
CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];
    PARTS:

    ////DMux16Way8(in=in,sel=address,a=a1,b=b1,c=c1,d=d1,e=e1,f=f1,g=g1,h=h1);
    //// So it works the following way, the DMux8Way receives a bit 0 or 1
    //// And then what happens if that it will send 1 to where it wants to access
    //// that
    DMux8Way(in=load,sel=address,a=a1,b=b1,c=c1,d=d1,e=e1,f=f1,g=g1,h=h1);
    Register(in=in,load=a1,out=out1);
    Register(in=in,load=b1,out=out2);
    Register(in=in,load=c1,out=out3);
    Register(in=in,load=d1,out=out4);
    Register(in=in,load=e1,out=out5);
    Register(in=in,load=f1,out=out6);
    Register(in=in,load=g1,out=out7);
    Register(in=in,load=h1,out=out8);
    ////
    ////Register(in=a1,load=load,out=out1);
    ////Register(in=b1,load=load,out=out2);
    ////Register(in=c1,load=load,out=out3);
    ////Register(in=d1,load=load,out=out4);
    ////Register(in=e1,load=load,out=out5);
    ////Register(in=f1,load=load,out=out6);
    ////Register(in=g1,load=load,out=out7);
    ////Register(in=h1,load=load,out=out8);
    Mux8Way16(a=out1,b=out2,c=out3,d=out4,e=out5,f=out6,g=out7,h=out8,sel=address,out=out);
    //// Replace this comment with your code.
}

